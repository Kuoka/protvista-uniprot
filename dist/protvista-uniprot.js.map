{"version":3,"file":"protvista-uniprot.js","sources":["../src/categories.js","../node_modules/lit-html/lit-html.js","../src/main.js"],"sourcesContent":["   export const categories = [\n       {\n           \"name\": \"PTM\",\n           \"label\": \"PTM\",\n           \"trackType\": \"protvista-track\",\n           \"adapter\": \"protvista-feature-adapter\",\n           \"url\": \"https://www.ebi.ac.uk/proteins/api/features/\",\n           \"tracks\": [{\n               \"name\": \"mod_res\",\n               \"label\": \"Modified residue\",\n               \"filter\": \"MOD_RES\",\n               \"trackType\": \"protvista-track\",\n               \"tooltip\": \"Modified residues such as phosphorylation, acetylation, acylation, methylation\"\n           }, {\n               \"name\": \"carbohyd\",\n               \"label\": \"Glycosylation\",\n               \"filter\": \"CARBOHYD\",\n               \"trackType\": \"protvista-track\",\n               \"tooltip\": \"Covalently attached glycan group(s)\"\n           }, {\n               \"name\": \"disulfid\",\n               \"label\": \"Disulfide bond\",\n               \"filter\": \"DISULFID\",\n               \"trackType\": \"protvista-track\",\n               \"tooltip\": \"The positions of cysteine residues participating in disulphide bonds\"\n           }, {\n               \"name\": \"crosslnk\",\n               \"label\": \"Cross-link\",\n               \"filter\": \"CROSSLNK\",\n               \"trackType\": \"protvista-track\",\n               \"tooltip\": \"Covalent linkages of various types formed between two proteins or between two parts of the same protein\"\n           }, {\n               \"name\": \"lipid\",\n               \"label\": \"Lipidation\",\n               \"filter\": \"LIPID\",\n               \"trackType\": \"protvista-track\",\n               \"tooltip\": \"Covalently attached lipid group(s)\"\n           }]\n       }\n   ];","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n// The first argument to JS template tags retain identity across multiple\n// calls to a tag for the same literal, so we can cache work done per literal\n// in a Map.\nexport const templateCaches = new Map();\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html');\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg');\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, partCallback = defaultPartCallback) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.partCallback = partCallback;\n    }\n    /**\n     * Returns a string of HTML used to create a <template> element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isTextBinding = true;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            html += s;\n            // We're in a text position if the previous string closed its tags.\n            // If it doesn't have any tags, then we use the previous text position\n            // state.\n            const closing = findTagClose(s);\n            isTextBinding = closing > -1 ? closing < s.length : isTextBinding;\n            html += isTextBinding ? nodeMarker : marker;\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTMl in an <svg> tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the <svg> tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function defaultTemplateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = new Map();\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n        template = new Template(result, result.getTemplateElement());\n        templateCache.set(result.strings, template);\n    }\n    return template;\n}\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param templateFactory a function to create a Template or retreive one from\n *     cache.\n */\nexport function render(result, container, templateFactory = defaultTemplateFactory) {\n    const template = templateFactory(result);\n    let instance = container.__templateInstance;\n    // Repeat render, just call update()\n    if (instance !== undefined && instance.template === template &&\n        instance._partCallback === result.partCallback) {\n        instance.update(result.values);\n        return;\n    }\n    // First render, create a new TemplateInstance and append it\n    instance =\n        new TemplateInstance(template, result.partCallback, templateFactory);\n    container.__templateInstance = instance;\n    const fragment = instance._clone();\n    instance.update(result.values);\n    removeNodes(container, container.firstChild);\n    container.appendChild(fragment);\n}\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nconst marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-posisitions, not attribute positions,\n * in template.\n */\nconst nodeMarker = `<!--${marker}-->`;\nconst markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#attributes-0\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-character\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst lastAttributeNameRegex = /[ \\x09\\x0a\\x0c\\x0d]([^\\0-\\x1F\\x7F-\\x9F \\x09\\x0a\\x0c\\x0d\"'>=/]+)[ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*)$/;\n/**\n * Finds the closing index of the last closed HTML tag.\n * This has 3 possible return values:\n *   - `-1`, meaning there is no tag in str.\n *   - `string.length`, meaning the last opened tag is unclosed.\n *   - Some positive number < str.length, meaning the index of the closing '>'.\n */\nfunction findTagClose(str) {\n    const close = str.lastIndexOf('>');\n    const open = str.indexOf('<', close + 1);\n    return open > -1 ? str.length : close;\n}\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport class TemplatePart {\n    constructor(type, index, name, rawName, strings) {\n        this.type = type;\n        this.index = index;\n        this.name = name;\n        this.rawName = rawName;\n        this.strings = strings;\n    }\n}\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const content = this.element.content;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(content, 133 /* NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT |\n               NodeFilter.SHOW_TEXT */, null, false);\n        let index = -1;\n        let partIndex = 0;\n        const nodesToRemove = [];\n        // The actual previous node, accounting for removals: if a node is removed\n        // it will never be the previousNode.\n        let previousNode;\n        // Used to set previousNode at the top of the loop.\n        let currentNode;\n        while (walker.nextNode()) {\n            index++;\n            previousNode = currentNode;\n            const node = currentNode = walker.currentNode;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (!node.hasAttributes()) {\n                    continue;\n                }\n                const attributes = node.attributes;\n                // Per https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                // attributes are not guaranteed to be returned in document order. In\n                // particular, Edge/IE can return them out of order, so we cannot assume\n                // a correspondance between part index and attribute index.\n                let count = 0;\n                for (let i = 0; i < attributes.length; i++) {\n                    if (attributes[i].value.indexOf(marker) >= 0) {\n                        count++;\n                    }\n                }\n                while (count-- > 0) {\n                    // Get the template literal section leading up to the first\n                    // expression in this attribute attribute\n                    const stringForPart = result.strings[partIndex];\n                    // Find the attribute name\n                    const attributeNameInPart = lastAttributeNameRegex.exec(stringForPart)[1];\n                    // Find the corresponding attribute\n                    const attribute = attributes.getNamedItem(attributeNameInPart);\n                    const stringsForAttributeValue = attribute.value.split(markerRegex);\n                    this.parts.push(new TemplatePart('attribute', index, attribute.name, attributeNameInPart, stringsForAttributeValue));\n                    node.removeAttribute(attribute.name);\n                    partIndex += stringsForAttributeValue.length - 1;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const nodeValue = node.nodeValue;\n                if (nodeValue.indexOf(marker) < 0) {\n                    continue;\n                }\n                const parent = node.parentNode;\n                const strings = nodeValue.split(markerRegex);\n                const lastIndex = strings.length - 1;\n                // We have a part for each match found\n                partIndex += lastIndex;\n                // We keep this current node, but reset its content to the last\n                // literal part. We insert new literal nodes before this so that the\n                // tree walker keeps its position correctly.\n                node.textContent = strings[lastIndex];\n                // Generate a new text node for each literal section\n                // These nodes are also used as the markers for node parts\n                for (let i = 0; i < lastIndex; i++) {\n                    parent.insertBefore(document.createTextNode(strings[i]), node);\n                    this.parts.push(new TemplatePart('node', index++));\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */ &&\n                node.nodeValue === marker) {\n                const parent = node.parentNode;\n                // Add a new marker node to be the startNode of the Part if any of the\n                // following are true:\n                //  * We don't have a previousSibling\n                //  * previousSibling is being removed (thus it's not the\n                //    `previousNode`)\n                //  * previousSibling is not a Text node\n                //\n                // TODO(justinfagnani): We should be able to use the previousNode here\n                // as the marker node and reduce the number of extra nodes we add to a\n                // template. See https://github.com/PolymerLabs/lit-html/issues/147\n                const previousSibling = node.previousSibling;\n                if (previousSibling === null || previousSibling !== previousNode ||\n                    previousSibling.nodeType !== Node.TEXT_NODE) {\n                    parent.insertBefore(document.createTextNode(''), node);\n                }\n                else {\n                    index--;\n                }\n                this.parts.push(new TemplatePart('node', index++));\n                nodesToRemove.push(node);\n                // If we don't have a nextSibling add a marker node.\n                // We don't have to check if the next node is going to be removed,\n                // because that node will induce a new marker if so.\n                if (node.nextSibling === null) {\n                    parent.insertBefore(document.createTextNode(''), node);\n                }\n                else {\n                    index--;\n                }\n                currentNode = previousNode;\n                partIndex++;\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\n/**\n * Returns a value ready to be inserted into a Part from a user-provided value.\n *\n * If the user value is a directive, this invokes the directive with the given\n * part. If the value is null, it's converted to undefined to work better\n * with certain DOM APIs, like textContent.\n */\nexport const getValue = (part, value) => {\n    // `null` as the value of a Text node will render the string 'null'\n    // so we convert it to undefined\n    if (isDirective(value)) {\n        value = value(part);\n        return directiveValue;\n    }\n    return value === null ? undefined : value;\n};\nexport const directive = (f) => {\n    f.__litDirective = true;\n    return f;\n};\nconst isDirective = (o) => typeof o === 'function' && o.__litDirective === true;\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const directiveValue = {};\nconst isPrimitiveValue = (value) => value === null ||\n    !(typeof value === 'object' || typeof value === 'function');\nexport class AttributePart {\n    constructor(instance, element, name, strings) {\n        this.instance = instance;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.size = strings.length - 1;\n        this._previousValues = [];\n    }\n    _interpolate(values, startIndex) {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const v = getValue(this, values[startIndex + i]);\n            if (v && v !== directiveValue &&\n                (Array.isArray(v) || typeof v !== 'string' && v[Symbol.iterator])) {\n                for (const t of v) {\n                    // TODO: we need to recursively call getValue into iterables...\n                    text += t;\n                }\n            }\n            else {\n                text += v;\n            }\n        }\n        return text + strings[l];\n    }\n    _equalToPreviousValues(values, startIndex) {\n        for (let i = startIndex; i < startIndex + this.size; i++) {\n            if (this._previousValues[i] !== values[i] ||\n                !isPrimitiveValue(values[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    setValue(values, startIndex) {\n        if (this._equalToPreviousValues(values, startIndex)) {\n            return;\n        }\n        const s = this.strings;\n        let value;\n        if (s.length === 2 && s[0] === '' && s[1] === '') {\n            // An expression that occupies the whole attribute value will leave\n            // leading and trailing empty strings.\n            value = getValue(this, values[startIndex]);\n            if (Array.isArray(value)) {\n                value = value.join('');\n            }\n        }\n        else {\n            value = this._interpolate(values, startIndex);\n        }\n        if (value !== directiveValue) {\n            this.element.setAttribute(this.name, value);\n        }\n        this._previousValues = values;\n    }\n}\nexport class NodePart {\n    constructor(instance, startNode, endNode) {\n        this.instance = instance;\n        this.startNode = startNode;\n        this.endNode = endNode;\n        this._previousValue = undefined;\n    }\n    setValue(value) {\n        value = getValue(this, value);\n        if (value === directiveValue) {\n            return;\n        }\n        if (isPrimitiveValue(value)) {\n            // Handle primitive values\n            // If the value didn't change, do nothing\n            if (value === this._previousValue) {\n                return;\n            }\n            this._setText(value);\n        }\n        else if (value instanceof TemplateResult) {\n            this._setTemplateResult(value);\n        }\n        else if (Array.isArray(value) || value[Symbol.iterator]) {\n            this._setIterable(value);\n        }\n        else if (value instanceof Node) {\n            this._setNode(value);\n        }\n        else if (value.then !== undefined) {\n            this._setPromise(value);\n        }\n        else {\n            // Fallback, will render the string representation\n            this._setText(value);\n        }\n    }\n    _insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    _setNode(value) {\n        if (this._previousValue === value) {\n            return;\n        }\n        this.clear();\n        this._insert(value);\n        this._previousValue = value;\n    }\n    _setText(value) {\n        const node = this.startNode.nextSibling;\n        value = value === undefined ? '' : value;\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === Node.TEXT_NODE) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if _previousValue is\n            // primitive?\n            node.textContent = value;\n        }\n        else {\n            this._setNode(document.createTextNode(value));\n        }\n        this._previousValue = value;\n    }\n    _setTemplateResult(value) {\n        const template = this.instance._getTemplate(value);\n        let instance;\n        if (this._previousValue && this._previousValue.template === template) {\n            instance = this._previousValue;\n        }\n        else {\n            instance = new TemplateInstance(template, this.instance._partCallback, this.instance._getTemplate);\n            this._setNode(instance._clone());\n            this._previousValue = instance;\n        }\n        instance.update(value.values);\n    }\n    _setIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _previousValue is an array, then the previous render was of an\n        // iterable and _previousValue will contain the NodeParts from the previous\n        // render. If _previousValue is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this._previousValue)) {\n            this.clear();\n            this._previousValue = [];\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this._previousValue;\n        let partIndex = 0;\n        for (const item of value) {\n            // Try to reuse an existing part\n            let itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                // If we're creating the first item part, it's startNode should be the\n                // container's startNode\n                let itemStart = this.startNode;\n                // If we're not creating the first part, create a new separator marker\n                // node, and fix up the previous part's endNode to point to it\n                if (partIndex > 0) {\n                    const previousPart = itemParts[partIndex - 1];\n                    itemStart = previousPart.endNode = document.createTextNode('');\n                    this._insert(itemStart);\n                }\n                itemPart = new NodePart(this.instance, itemStart, this.endNode);\n                itemParts.push(itemPart);\n            }\n            itemPart.setValue(item);\n            partIndex++;\n        }\n        if (partIndex === 0) {\n            this.clear();\n            this._previousValue = undefined;\n        }\n        else if (partIndex < itemParts.length) {\n            const lastPart = itemParts[partIndex - 1];\n            // Truncate the parts array so _previousValue reflects the current state\n            itemParts.length = partIndex;\n            this.clear(lastPart.endNode.previousSibling);\n            lastPart.endNode = this.endNode;\n        }\n    }\n    _setPromise(value) {\n        this._previousValue = value;\n        value.then((v) => {\n            if (this._previousValue === value) {\n                this.setValue(v);\n            }\n        });\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\nexport const defaultPartCallback = (instance, templatePart, node) => {\n    if (templatePart.type === 'attribute') {\n        return new AttributePart(instance, node, templatePart.name, templatePart.strings);\n    }\n    else if (templatePart.type === 'node') {\n        return new NodePart(instance, node, node.nextSibling);\n    }\n    throw new Error(`Unknown part type ${templatePart.type}`);\n};\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, partCallback, getTemplate) {\n        this._parts = [];\n        this.template = template;\n        this._partCallback = partCallback;\n        this._getTemplate = getTemplate;\n    }\n    update(values) {\n        let valueIndex = 0;\n        for (const part of this._parts) {\n            if (part.size === undefined) {\n                part.setValue(values[valueIndex]);\n                valueIndex++;\n            }\n            else {\n                part.setValue(values, valueIndex);\n                valueIndex += part.size;\n            }\n        }\n    }\n    _clone() {\n        const fragment = document.importNode(this.template.element.content, true);\n        const parts = this.template.parts;\n        if (parts.length > 0) {\n            // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n            // null\n            const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT |\n                   NodeFilter.SHOW_TEXT */, null, false);\n            let index = -1;\n            for (let i = 0; i < parts.length; i++) {\n                const part = parts[i];\n                while (index < part.index) {\n                    index++;\n                    walker.nextNode();\n                }\n                this._parts.push(this._partCallback(this, part, walker.currentNode));\n            }\n        }\n        return fragment;\n    }\n}\n/**\n * Reparents nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), into another container (could be the same container), before\n * `beforeNode`. If `beforeNode` is null, it appends the nodes to the\n * container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    let node = start;\n    while (node !== end) {\n        const n = node.nextSibling;\n        container.insertBefore(node, before);\n        node = n;\n    }\n};\n/**\n * Removes nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), from `container`.\n */\nexport const removeNodes = (container, startNode, endNode = null) => {\n    let node = startNode;\n    while (node !== endNode) {\n        const n = node.nextSibling;\n        container.removeChild(node);\n        node = n;\n    }\n};\n//# sourceMappingURL=lit-html.js.map","import {\n    categories\n} from './categories';\nimport {\n    html,\n    render\n} from 'lit-html';\nimport '../styles/protvista-uniprot.css';\n\nconst loadComponent = function () {\n    class ProtvistaUniprot extends HTMLElement {\n\n        constructor() {\n            super();\n            this._accession = this.getAttribute('accession');\n            // get properties here\n        }\n\n        connectedCallback() {\n            this.loadEntry(this._accession).then(entryData => {\n                this._sequenceLength = entryData.sequence.sequence.length;\n                // We need to get the length of the protein before rendering it\n                this._render();\n            })\n        }\n\n        async loadEntry(accession) {\n            try {\n                return await (await fetch(`https://www.ebi.ac.uk/proteins/api/proteins/${accession}`)).json();\n            } catch (e) {\n                console.log(`Couldn't load UniProt entry`, e);\n            }\n        }\n\n        _render() {\n            const mainHtml = () => html `\n            <protvista-manager attributes=\"length displaystart displayend highlightstart highlightend variantfilters\" additionalsubscribers=\"uuw-litemol-component\">\n                <protvista-navigation length=\"${this._sequenceLength}\"></protvista-navigation>\n                <protvista-sequence length=\"${this._sequenceLength}\"></protvista-sequence>\n                ${categories.map(category =>\n                html`\n                        <div class=\"category-label\" data-category-toggle=\"${category.name}\">\n                            ${category.label}\n                        </div>\n                        <div class=\"aggregate-track-content\" data-toggle-aggregate=\"${category.name}\">\n                            ${this.getTrack(category.trackType, category.adapter, category.url, this.getCategoryTypesAsString(category.tracks), 'non-overlapping')}\n                        </div>\n                        ${category.tracks.map(track => html`\n                            <div class=\"track-label\" data-toggle=\"${category.name}\">\n                                ${track.label ? track.label : this.getLabelComponent(track.labelComponent)}\n                            </div>\n                            <div class=\"track-content\" data-toggle=\"${category.name}\">\n                                ${this.getTrack(track.trackType, category.adapter, category.url, track.filter)}\n                            </div>`)}\n                    `\n            )}\n                <protvista-sequence id=\"seq1\" length=\"${this._sequenceLength}\"></protvista-sequence>\n            </protvista-manager>`;\n            render(mainHtml(), this);\n            this.querySelectorAll('.category-label').forEach(cat => {\n                cat.addEventListener('click', e => {\n                    this.handleCategoryClick(e);\n                });\n            });\n        }\n\n        handleCategoryClick(e) {\n            const toggle = e.target.getAttribute('data-category-toggle');\n            if (!e.target.classList.contains('open')) {\n                e.target.classList.add('open');\n            } else {\n                e.target.classList.remove('open');\n            }\n            this.toggleOpacity(this.querySelector(`[data-toggle-aggregate=${toggle}]`));\n            this.querySelectorAll(`[data-toggle=${toggle}]`).forEach(track => this.toggleVisibility(track));\n        }\n\n        toggleOpacity(elt) {\n            if (elt.style.opacity === '' || parseInt(elt.style.opacity) === 1) {\n                elt.style.opacity = 0;\n            } else {\n                elt.style.opacity = 1;\n            }\n        }\n\n        toggleVisibility(elt) {\n            if (elt.style.display === '' || elt.style.display === 'none') {\n                elt.style.display = 'block';\n            } else {\n                elt.style.display = 'none';\n            }\n        }\n\n        getCategoryTypesAsString(tracks) {\n            return tracks.map(t => t.filter).join(\",\");\n        }\n\n        getAdapter(adapter, url, trackTypes) {\n            // TODO Allow injection of static content into templates https://github.com/Polymer/lit-html/issues/78\n            switch (adapter) {\n                case ('protvista-feature-adapter'):\n                    return html `\n                    <protvista-feature-adapter filters=\"${trackTypes}\">\n                            <data-loader>\n                                <source src=\"${url}${this._accession}\" />\n                            </data-loader>\n                    </protvista-feature-adapter>\n                    `;\n                case ('protvista-variation-adapter'):\n                    return html `                            \n                    <data-loader>\n                        <source src=\"${url}${this._accession}\" />\n                    </data-loader>\n                `;\n            }\n        }\n\n        getLabelComponent(name) {\n            switch(name) {\n                case ('protvista-variation-filter'):\n                    return html`<protvista-variation-filter></protvista-variation-filter`;\n            }\n        }\n        getTrack(trackType, adapter, url, trackTypes, layout = '') {\n            // TODO Allow injection of static content into templates https://github.com/Polymer/lit-html/issues/78\n            switch (trackType) {\n                case ('protvista-track'):\n                    return html `\n                    <protvista-track length=\"${this._sequenceLength}\" tooltip-event=\"click\" layout=\"${layout}\">\n                        ${this.getAdapter(adapter, url, trackTypes)}\n                    </protvista-track>\n                    `;\n                case ('protvista-variation'):\n                    return html `\n                    <protvista-variation length=\"${this._sequenceLength}\" tooltip-event=\"click\">\n                        ${this.getAdapter(adapter, url, trackTypes)}\n                    </protvista-variation>\n                    `;\n            }\n\n        }\n\n    }\n    customElements.define('protvista-uniprot', ProtvistaUniprot);\n};\n\n// Conditional loading of polyfill\nif (window.customElements) {\n    loadComponent();\n} else {\n    document.addEventListener('WebComponentsReady', function () {\n        loadComponent();\n    });\n}"],"names":["categories","loadComponent","ProtvistaUniprot","_accession","getAttribute","loadEntry","then","_sequenceLength","entryData","sequence","length","_render","accession","fetch","json","log","mainHtml","html","map","category","name","label","getTrack","trackType","adapter","url","getCategoryTypesAsString","tracks","track","getLabelComponent","labelComponent","filter","querySelectorAll","forEach","addEventListener","handleCategoryClick","e","toggle","target","classList","contains","add","remove","toggleOpacity","querySelector","toggleVisibility","elt","style","opacity","parseInt","display","t","join","trackTypes","layout","getAdapter","HTMLElement","define","window","customElements"],"mappings":"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"}